@*@model UFMS.Web.Controllers.EmployeeController.EmployeeModel*@
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutUcasportfolio.cshtml";
}



<style>
    .ui-autocomplete {
        cursor: pointer;
        height: 400px;
        width: 300px;
        overflow-y: scroll;
        background-color: white;
        color: rgb(0,188,212);
        /*outline-style:outset;*/
    }

    .bordercss {
        border: 3px double #CCCCCC;
        color: black;
    }

        .bordercss:focus {
            box-shadow: 0 0 5px rgba(81, 203, 238, 1);
            border: 2px solid rgba(81, 203, 238, 1);
        }

    .k-grouping-header {
        background-color: #1ABB9C;
    }

    .accordion .panel-heading {
        padding: 8px;
    }

    .wizard_content {
        /*overflow:auto;*/
        margin: 0 auto;
        height: 350px;
        bottom: 0px;
        top: 0px;
        overflow-x: hidden;
    }
</style>
<script src="~/Content/js/wizard/jquery.smartWizard.js"></script>
<script type="text/javascript">
   



    function showMyImage(fileInput) {
        var files = fileInput.files;
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;

            if (file.type.match(imageType)) {
                //continue;
                var size = Math.round(file.size / 1024);
                if (size <= 100) {
                    var img = document.getElementById("thumbnil");
                    img.file = file;
                    var reader = new FileReader();
                    reader.onload = (function (aImg) {
                        return function (e) {
                            aImg.src = e.target.result;
                        };
                    })(img);
                    reader.readAsDataURL(file);
                }
                else
                    alert('Image file cannot be greater than 100 KB.');
            }
            else {
                $("#PhotographMsg").replaceWith($("#PhotographMsg").clone(true));
                alert('Please select a valid image file');
            }

        }
    }



    function showMyImageSign(fileInput) {
        var files = fileInput.files;
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;

            if (file.type.match(imageType)) {
                //continue;
                var size = Math.round(file.size / 1024);
                if (size <= 100) {
                    var img = document.getElementById("thumbnil2");
                    img.file = file;
                    var reader = new FileReader();
                    reader.onload = (function (aImg) {
                        return function (e) {
                            aImg.src = e.target.result;
                        };
                    })(img);
                    reader.readAsDataURL(file);
                }
                else
                    alert('Image file cannot be greater than 100 KB.');
            }
            else {
                $("#SignatureMsg").replaceWith($("#SignatureMsg").clone(true));
                alert('Please select a valid image file');
            }

        }
    }







    var ActionMode = "Create";
    var PresThanaId = "0";
    var PermThanaId = "0";
    var DesignationId = "0";
    function Get_EmployeeInfo_For_Edit()
    {
        var EmployeeId = $("#hdnEmployeeId").val();
       // $('#AjaxLoader').show();
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("Get_EmployeeInfo_For_Edit", "Employee", "http")',
            data: { EmployeeId: EmployeeId },
            dataType: 'json',
            async: true,
            success: function (EmployeeInfo) {
                ActionMode = "Edit"
                $.each(EmployeeInfo, function (id, E) {
                    $("#EmployeeCode").val(E.emp_office_code);
                    $("#EmployeeCode").attr("readonly", true);
                    $("#EmployeeName").val(E.emp_name);
                    $("#OfficeEmail").val(E.OfficeEmail);
                    $("#empDateOfBirth").val(E.emp_datetimeof_birth);
                    //if (E.emp_desg_id != 0 && E.emp_desg_id != null)
                    //    $("#DesignamtionList").val(E.emp_desg_id);
                    if (E.emp_job_id != 0 && E.emp_job_id != null) {
                        $("#JobTypeList").val(E.emp_job_id);
                        GetDesignationList();
                        DesignationId = E.emp_desg_id;
                    }
                    if (E.IsSalaryDisburse == 0)
                    {
                        $("#empJoiningDate").attr("disabled",false);
                    }
                    else
                    {
                        $("#empJoiningDate").attr("disabled", true);
                    }
                    $("#empJoiningDate").val(E.emp_joining_datetime);
                    if (E.emp_dept_id != 0 && E.emp_dept_id != null)
                        $("#DepartmentList").val(E.emp_dept_id);
                    if (E.emp_branch_id != 0 && E.emp_branch_id != null)
                        $("#BranchList").val(E.emp_branch_id);
                    if (E.emp_job_id != 0 && E.emp_job_id != null)
                        $("#JobTypeList").val(E.emp_job_id);
                    if (E.emp_desk_id != 0 && E.emp_desk_id != null)
                    $("#DeskList").val(E.emp_desk_id);
                    $("#DueDateofConfirmation").val(E.emp_confirmation_datetime);
                    if (E.emp_increment_flag == 1)
                    {
                        $("#ckInrement").prop("checked",true);
                         $("#divIncrement").show();
                        $("#WithIncrement").val(E.emp_noof_increment);
                    }
                    //alert()
                    $("#hdnEmployeeDetailId").val(E.DetailId);
                    $("#FatherName").val(E.emp_father_name);
                    $("#MotherName").val(E.emp_mother_name);
                    if (E.emp_gender != 0 && E.emp_gender != null)
                    $("#ddlGender").val(E.emp_gender);
                    if (E.blood_group_id != 0 && E.blood_group_id != null)
                        $("#BloodGroupList").val(E.blood_group_id);
                    if (E.religion_id != 0 && E.religion_id != null)
                        $("#ReligionList").val(E.religion_id);
                    if (E.marital_status_id != 0 && E.marital_status_id != null)
                        $("#MaritalStatusList").val(E.marital_status_id);
                    $("#SpouseName").val(E.emp_spouse_name);
                    $("#SpouseDateOfBirth").val(E.emp_spouse_dateofbirth);
                    $("#SpouseContactNo").val(E.emp_spouse_contact_no);
                    if (E.emp_country_id != 0 && E.emp_country_id != null)
                        $("#CountryList").val(E.emp_country_id);
                    $("#NationalId").val(E.emp_nation_id_no);
                    $("#PassportNo").val(E.emp_passport_no);
                    $("#LandPhoneNo").val(E.emp_phone_residance);
                    $("#SellPhoneNo").val(E.emp_mobile);
                    $("#LandPhoneNoOffice").val(E.emp_phone_office);
                    $("#EmailOffice").val(E.emp_office_mail_address);
                    $("#EmailPersonal").val(E.emp_personal_mail_address);
                    $("#EmergencyContactPerson").val(E.emergency_contact_person_name);
                    $("#EmergencyContactNo").val(E.emergency_contact_no);
                    $("#RelationList").val(E.relation_emergency_person);
                    $("#Remarks").val(E.remarks);
                    $("#PresentAddress").val(E.emp_present_address);
                    if (E.emp_present_district_id != 0 && E.emp_present_district_id != null)
                    {
                        $("#ddlDistrictlist").val(E.emp_present_district_id);
                        GetThanaList();
                        PresThanaId = E.emp_present_thana_id;
                    }
                    $("#PermanentAddress").val(E.emp_permanent_address);
                    if (E.emp_permanent_district_id != 0 && E.emp_permanent_district_id != null) {
                        $("#ddlPerDistrictlist").val(E.emp_permanent_district_id);
                        GetPer_ThanaList();
                        PermThanaId = E.emp_permanent_thana_id;
                    }
                    $('#AjaxLoader').hide();
                });

            },
            error: function (request, status, error) {
                $('#AjaxLoader').hide();
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }



    function GetDistrictList() {
        var ddlDistrictlist = $("#ddlDistrictlist");
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetDistrictList", "Employee", "http")',
                data: { },
                dataType: 'json',
                async: true,
                success: function (DistrictList) {
                    // $('#AjaxLoader').hide();
                    ddlDistrictlist.html('');
                    ddlDistrictlist.append($('<option></option>').val("0").html("Please select"));
                    $.each(DistrictList, function (id, option) {
                        ddlDistrictlist.append($('<option></option>').val(option.Id).html(option.DistrictName));
                    });
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
        
    }

    function GetThanaList() {

        var DistrictId = $("#ddlDistrictlist").val();
        var ddlThanalist = $("#ddlThanalist");

        if (DistrictId != "0") {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetddlThanaList", "Employee", "http")',
                data: { DistrictId: DistrictId },
                dataType: 'json',
                async: true,
                success: function (ThanaList) {
                    ddlThanalist.html('');
                    ddlThanalist.append($('<option></option>').val("0").html("Please select"));
                    $.each(ThanaList, function (id, option) {
                        ddlThanalist.append($('<option></option>').val(option.Id).html(option.ThanaName));
                    });
                    if (ActionMode == "Edit")
                    {
                         $("#ddlThanalist").val(PresThanaId);
                    }
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
        }
    }

    function GetPer_DistrictList() {

        var ddlDistrictlist = $("#ddlPerDistrictlist");

            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetDistrictList", "Employee", "http")',
                data: {   },
                dataType: 'json',
                async: true,
                success: function (DistrictList) {
                    // $('#AjaxLoader').hide();
                    ddlDistrictlist.html('');
                    ddlDistrictlist.append($('<option></option>').val("0").html("Please select"));
                    $.each(DistrictList, function (id, option) {
                        ddlDistrictlist.append($('<option></option>').val(option.Id).html(option.DistrictName));
                    });

                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
        
    }

    function GetPer_ThanaList() {

        var DistrictId = $("#ddlPerDistrictlist").val();
        var ddlThanalist = $("#ddlPerThanalist");

        if (DistrictId != "0") {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetddlThanaList", "Employee", "http")',
                data: { DistrictId: DistrictId },
                dataType: 'json',
                async: true,
                success: function (ThanaList) {
                    ddlThanalist.html('');
                    ddlThanalist.append($('<option></option>').val("0").html("Please select"));
                    $.each(ThanaList, function (id, option) {
                        ddlThanalist.append($('<option></option>').val(option.Id).html(option.ThanaName));
                    });
                    if (ActionMode == "Edit") {
                        $("#ddlPerThanalist").val(PermThanaId);
                    }
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
        }
    }




    ///////////////////////////////////////////////////////////
    function leaveAStepCallback(obj, context) {
        
        //alert("Leaving step " + context.fromStep + " to go to step " + context.toStep);
        //return validateSteps(context.fromStep); // return false to stay on step and true to continue navigation
        if (context.fromStep == 1) {
            var status = $("#hdnEmployeeId").val();//Step1_Save();

            if (status == '0' || status == 'undefined') {
                return false;
            }
            else { return true; }
        }
        else if (context.fromStep == 2) {

            var status = $("#hdnEmployeeDetailId").val();//"1";//Step2_Save(); 
            //var status = $("#hdnEmployeeId").val();
            if (status == '0' || status == 'undefined') {
                $.alert.open("error","Insert required field");
                return false;
            }
            else { return true; }
        }
        else if (context.fromStep == 3) {
            var status = "1";//Step2_Save();
            //alert(status);
            if (status == '0' || status == 'undefined') {
                return false;
            }
            else { return true; }
        }
       
        else { return false; }
    }



    function SaveEmployeeBasic() { //Step1_Save
            //EmployeeCode EmployeeName empDateOfBirth   DesignamtionList empJoiningDate  DepartmentList BranchList JobTypeList DeskList DueDateofConfirmation WithIncrement
         
            var EmployeeCode = $("#EmployeeCode").val();
            var EmployeeName = $("#EmployeeName").val();
            var empDateOfBirth = $("#empDateOfBirth").val();
            var DesignamtionList = $("#DesignamtionList").val();
            var empJoiningDate = $("#empJoiningDate").val();
            var DepartmentList = $("#DepartmentList").val();
            var BranchList = $("#BranchList").val();
            var JobTypeList = $("#JobTypeList").val();
            var DeskList = $("#DeskList").val() == "" ? null : $("#DeskList").val();
            var DueDateofConfirmation = $("#DueDateofConfirmation").val();
            var WithIncrement = $("#WithIncrement").val() == "" ? "0" : $("#WithIncrement").val();
            var EmployeeId = $("#hdnEmployeeId").val() == null ? "0" : $("#hdnEmployeeId").val();
            var OfficeMail = $("#OfficeEmail").val();


            if (EmployeeCode == "") {
                $.alert.open("error", "Insert employee code");
            }
            else if (EmployeeName == "") {
                $.alert.open("error", "Insert employee name");
            }
            else if (OfficeMail == "") {
                $.alert.open("error", "Insert E-mail");
            }
            else if (empDateOfBirth == "") {
                $.alert.open("error", "Insert employee date of birth");
            }
            else if (DesignamtionList == "0") {
                $.alert.open("error", "Select designation");
            }
            else if (empJoiningDate == "") {
                $.alert.open("error", "Insert joining date");
            }
            else if (DepartmentList == "") {
                $.alert.open("error", "Select department");
            }
            else if (BranchList == "") {
                $.alert.open("error", "Select branch.");
            }
            else if (JobTypeList == "") {
                $.alert.open("error", "Select job type");
            }
                //else if (DeskList == "") {
                //    $.alert.open("error", "Select desk");
                //}
            //else if (DueDateofConfirmation == "") {
            //    $.alert.open("error", "Insert confirmation date");
            //}
            else {
                $('#AjaxLoader').show();
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("SaveEmployeeBasic", "Employee", "http")',
                    data: {
                        EmployeeId: EmployeeId, EmployeeCode: EmployeeCode, EmployeeName: EmployeeName, OfficeMail: OfficeMail, empDateOfBirth: empDateOfBirth, DesignamtionList: DesignamtionList, empJoiningDate: empJoiningDate,
                        DepartmentList: DepartmentList, BranchList: BranchList, JobTypeList: JobTypeList, DeskList: DeskList, DueDateofConfirmation: DueDateofConfirmation, WithIncrement: WithIncrement
                    },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        $('#AjaxLoader').hide();
                        if (data.Result == "Success") {
                            $('#AjaxLoader').hide();

                            $("#hdnEmployeeId").val(data.EmployeeId);
                            Get_EmployeeInfo_For_Edit();
                            $.alert.open('Success', data.Message);
                            return true;

                        }
                        else {
                            $('#AjaxLoader').hide();
                            $.alert.open('Error', data.Message);
                            return false;
                        }
                    },
                    error: function (request, status, error) {
                        $('#AjaxLoader').hide();
                        alert(error)
                    }
                });

        }
    }


    function SaveEmployeeDetails() {
        if (!validator.checkAll($('#step-2'))) {
            return false;
        }
        else {
            $('#AjaxLoader').show();
            debugger;
            //  EmployeeId FatherName  MotherName ddlGender BloodGroupList ReligionList  MaritalStatusList  SpouseName SpouseDateOfBirth  SpouseContactNo CountryList NationalId  PassportNo LandPhoneNo SellPhoneNo LandPhoneNoOffice EmailOffice EmailPersonal EmergencyContactPerson EmergencyContactNo  RelationList Remarks
            //                           

            var EmployeeId = $("#hdnEmployeeId").val() == null ? "0" : $("#hdnEmployeeId").val();
            var FatherName = $("#FatherName").val();
            var MotherName = $("#MotherName").val();
            var ddlGender = $("#ddlGender").val();
            var BloodGroupList = $("#BloodGroupList").val() == "" ? null : $("#BloodGroupList").val();
            var ReligionList = $("#ReligionList").val() == ""  ? null : $("#ReligionList").val();
            var MaritalStatusList = $("#MaritalStatusList").val() == ""  ? null : $("#MaritalStatusList").val();
            var SpouseName = $("#SpouseName").val();
            var SpouseDateOfBirth = $("#SpouseDateOfBirth").val();
            var SpouseContactNo = $("#SpouseContactNo").val();
            var CountryList = $("#CountryList").val() == ""  ? null : $("#CountryList").val();
            var NationalId = $("#NationalId").val();
            var PassportNo = $("#PassportNo").val();
            var LandPhoneNo = $("#LandPhoneNo").val();
            var SellPhoneNo = $("#SellPhoneNo").val();
            var LandPhoneNoOffice = $("#LandPhoneNoOffice").val();
            var EmailOffice = $("#EmailOffice").val();
            var EmailPersonal = $("#EmailPersonal").val();
            var EmergencyContactPerson = $("#EmergencyContactPerson").val();
            var EmergencyContactNo = $("#EmergencyContactNo").val();

            var RelationList = $("#RelationList").val() == ""  ? null : $("#RelationList").val();
            var Remarks = $("#Remarks").val();
            var PresentAddress = $("#PresentAddress").val();
            var ddlDistrictlist = $("#ddlDistrictlist").val() == "0"  ? null : $("#ddlDistrictlist").val();
            var ddlThanalist = $("#ddlThanalist").val() ==  "" ? null : $("#ddlThanalist").val();
            var PermanentAddress = $("#PermanentAddress").val();
            var ddlPerDistrictlist = $("#ddlPerDistrictlist").val() == "0" ? null : $("#ddlPerDistrictlist").val();
            var ddlPerThanalist = $("#ddlPerThanalist").val() ==  "" ? null : $("#ddlPerThanalist").val();

            if (EmployeeId != "0")
            {
                if (FatherName != "" && MotherName != "" && BloodGroupList != null && ReligionList != null && MaritalStatusList != null && CountryList != null) {
                    $.ajax({
                        type: 'GET',
                        contentType: "application/json; charset=utf-8",
                        url: '@Url.Action("SaveEmployeeDetailsEx", "Employee", "http")',
                        data: {
                            EmployeeId: EmployeeId, FatherName:FatherName ,  MotherName: MotherName, Gender: ddlGender, BloodGroupList: BloodGroupList, ReligionList:ReligionList ,  MaritalStatusList: MaritalStatusList,  SpouseName: SpouseName,
                            SpouseDateOfBirth: SpouseDateOfBirth,  SpouseContactNo: SpouseContactNo, CountryList: CountryList, NationalId : NationalId, PassportNo: PassportNo, LandPhoneNo: LandPhoneNo, SellPhoneNo: SellPhoneNo,
                            LandPhoneNoOffice: LandPhoneNoOffice, EmailOffice: EmailOffice, EmailPersonal: EmailPersonal, EmergencyContactPerson: EmergencyContactPerson, EmergencyContactNo: EmergencyContactNo, RelationList: RelationList, Remarks: Remarks,
                            PresentAddress: PresentAddress, ddlDistrictlist: ddlDistrictlist, ddlThanalist: ddlThanalist, PermanentAddress: PermanentAddress, ddlPerDistrictlist: ddlPerDistrictlist, ddlPerThanalist: ddlPerThanalist
                        },
                        dataType: 'json',
                        async: true,
                        success: function (data) {
                            if (data.Result == "Success") {
                                $('#AjaxLoader').hide();
                                $("#hdnEmployeeId").val(data.EmployeeId);
                                Get_EmployeeInfo_For_Edit();
                                $.alert.open('Success', data.Message);
                                return true;

                            }
                            else {
                                $.alert.open('Error', data.Message);
                                return false;
                            }
                        },
                        error: function (request, status, error) {
                            alert(error)
                        }
                    });
                }
                else {
                    $('#AjaxLoader').hide();
                    $.alert.open("error", "Insert all required field");
                }

            }
            else
            {
                $('#AjaxLoader').hide();
                $.alert.open("error"," Please save employee basic information save");
            }
           
            

        } // else

    }

    function GetDesignationList() {

        var JobTypeId = $("#JobTypeList").val() == "" ? "0" : $("#JobTypeList").val();
        var DesignamtionList = $("#DesignamtionList");

        if (JobTypeId != "0") {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetDesignationList", "Employee", "http")',
                data: { JobTypeId: JobTypeId },
                dataType: 'json',
                async: true,
                success: function (DesgList) {
                    DesignamtionList.html('');
                    DesignamtionList.append($('<option></option>').val("0").html("Please select"));
                    $.each(DesgList, function (id, option) {
                        DesignamtionList.append($('<option></option>').val(option.Id).html(option.DesignationName));
                    });
                    if (ActionMode == "Edit") {
                        $("#DesignamtionList").val(DesignationId);
                    }
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
        }
    }



    

    function onFinishCallback(objs, context) {
        if (context.fromStep == 3) {
            var status = "1"; //Step2_Save();
            if (status == '0' || status == 'undefined') {
                return false;
            }
            else {
                return true;

            }
        }
    }

    $(document).ready(function () {
        
        GetDistrictList();
        GetPer_DistrictList();
        if ($("#hdnEmployeeId").val() != "0") {
            $("#EmployeeCode").attr("readonly",true);
            ActionMode == "Edit";
            Get_EmployeeInfo_For_Edit();
        }
        

        $("#btnSaveStep1").click(function (e) {
            e.preventDefault();
            SaveEmployeeBasic();
        });
        $("#btnSaveStep2").click(function (e) {
            e.preventDefault()
            SaveEmployeeDetails();
        });


        $('#btnImagesSave').click(function (e) {
            e.preventDefault();
            $('#EmployeeImageForm').ajaxSubmit({
                type: "POST",
                target: '#thumbnil',
                data: { EmployeeId: $("#hdnEmployeeId").val() },
                dataType: 'json',
                resetForm: true,
                success: function (data) {
                    if (data.Result == "Success") {
                        $("#SucInvDeailMsg").show(800).fadeToggle(3000);
                    }
                    else {
                        $.alert.open("Error", data.Message);
                    }
                },
                error: function () {
                    $("#dialog-message").html('<p>Error, Fail to Save.</p>');
                    $("#dialog-message").dialog({
                        modal: true,
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                }
            });
        });


        $("#JobTypeList").change(function () { ActionMode = "Save"; GetDesignationList(); });


        $('#wizard').smartWizard({
            onLeaveStep: leaveAStepCallback,
            onFinish: onFinishCallback
        });
        $(".btn btn-default").hide();

        $("#ckInrement").click(function () { if ($("#ckInrement").is(":checked") == true) { $("#divIncrement").show(); } else { $("#divIncrement").hide(); } });




        $("#ddlDistrictlist").change(function () { ActionMode == "Save"; GetThanaList() });

        $("#ddlPerDistrictlist").change(function () { ActionMode == "Save"; GetPer_ThanaList() });

        $('.actionBar').find('a:first').hide();
    });
   
    $("#CountryList").val(18);
</script>
@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", id = "EmployeeForm" }))
{

    <div class="">
        <div id="AjaxLoader" class="ajaxLoader"></div>
        <input type="hidden" id="hdnEmployeeId" value="@ViewData["HdnEmployeeId"]" />
        <input type="hidden" id="hdnEmployeeDetailId" value="0" />
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <div class="page-title">
                            <div class="title_left PageHeader" style="width:90%;">
                                <h3 style="color: white;padding:2px">&nbsp;Employee Information</h3>
                            </div>
                            @Html.ActionLink("Back to list", "Index", "Employee", new { EmployeeId = 0 }, new { @class = "btn btn-primary btn-sm pull-right" })
                        </div>
                    </div>
                    <div class="x_content">
                        <div id="wizard" class="form_wizard wizard_horizontal" >
                            <ul class="wizard_steps">
                                <li>
                                    <a href="#step-1">
                                        <span class="step_no">1</span>
                                        <span class="step_descr">
                                          <b style="color: rgb(26,187,156)">Basic Information</b> 
                                        </span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#step-2">
                                        <span class="step_no">2</span>
                                        <span class="step_descr">
                                            <b style="color: rgb(26,187,156)">Detail Information</b> 
                                        </span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#step-3">
                                        <span class="step_no">3</span>
                                        <span class="step_descr">
                                            <b style="color: rgb(26,187,156)">Attachment</b>
                                        </span>
                                    </a>
                                </li>
                                @*<li>
                                    <a href="#step-3">
                                        <span class="step_no">3</span>
                                        <span class="step_descr">
                                            Step 3<br />
                                            <small>Step 3 description</small>
                                        </span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#step-4">
                                        <span class="step_no">4</span>
                                        <span class="step_descr">
                                            Step 4<br />
                                            <small>Step 4 description</small>
                                        </span>
                                    </a>
                                </li>*@
                            </ul>
                            <div id="step-1">
                                <form class="form-horizontal form-label-left">
                                    <div class="row form-group">
                                        @Html.Label("Employee Id", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("EmployeeCode", new { htmlAttributes = new { @class = "form-control"} })
                                        </div>
                                        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("EmployeeName", new { htmlAttributes = new { @class = "form-control"} })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("OfficeEmail", new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        @Html.Label("Date of Birth", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("empDateOfBirth", new { htmlAttributes = new { @class = "form-control DateInput check-date" } })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        @Html.Label("Joining Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("empJoiningDate", new { htmlAttributes = new { @class = "form-control DateInput check-date" } })
                                        </div>
                                        @Html.Label("Branch", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.DropDownList("BranchList", new SelectList(ViewBag.BranchList, "Id", "BrokerBranchName"), "Please select", new { @class = "form-control bordercss" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.DropDownList("DepartmentList", new SelectList(ViewBag.DepartmentList, "Id", "DepartmentName"), "Please select", new { @class = "form-control bordercss" })
                                        </div>
                                        @Html.Label("Job Type", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.DropDownList("JobTypeList", new SelectList(ViewBag.JobTypeList, "JOB_ID", "JOB_NAME"), "Please select", new { @class = "form-control bordercss" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        @Html.Label("Designation ", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.DropDownList("DesignationList", null, new { @id = "DesignamtionList", @class = "form-control bordercss" })
                                        </div>
                                        @Html.Label("Desk", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.DropDownList("DeskList", new SelectList(ViewBag.DeskList, "DESK_ID", "DESK_NAME"), "Please select", new { @class = "form-control bordercss" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        @Html.Label("Due Date of Confirmation", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            @Html.Editor("DueDateofConfirmation", new { htmlAttributes = new { @class = "form-control DateInput check-date" } })
                                        </div>
                                        <div class="control-label col-md-2">
                                            <input type="checkbox" id="ckInrement"/><span style="color:black"><b>With Increment</b></span>
                                        </div>
                                        <div class="col-md-4 col-sm-6 col-xs-12" id="divIncrement" style="display:none">
                                            @Html.Editor("WithIncrement", new { htmlAttributes = new { @class = "form-control",@type="number" } })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="control-label col-md-5">
                                            <button type="submit" class="btn btn-success" id="btnSaveStep1">Save</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div id="step-2" style="height:560px">
                                @*****************************************************@
                                <div class="row form-group">
                                    @Html.Label("Father Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("FatherName", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Mother Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("MotherName", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="row form-group">
                                    @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        <select class="form-control bordercss" id="ddlGender">
                                            <option value="MALE">Male</option>
                                            <option value="FEMALE">Female</option>
                                        </select>
                                    </div>
                                    @Html.Label("Blood Group ", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("BloodGroupList", new SelectList(ViewBag.BloodGroupList, "BLOOD_GROUP_ID", "BLOOD_GROUP_NAME"), "Please select", new { @class = "form-control bordercss" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Religion", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("ReligionList", new SelectList(ViewBag.ReligionList, "RELIGION_ID", "RELIGION_NAME"), "Please select", new { @class = "form-control bordercss" })
                                    </div>
                                    @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("MaritalStatusList", new SelectList(ViewBag.MaritalStatusList, "MARITAL_STATUS_ID", "MARITAL_STATUS_NAME"), "Please select", new { @class = "form-control bordercss" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Spouse Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("SpouseName", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Spouse Date of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("SpouseDateOfBirth", new { htmlAttributes = new { @class = "form-control DateInput check-date" } })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Contact No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("SpouseContactNo", new { htmlAttributes = new { @class = "form-control DateInput check-date" } })
                                    </div>

                                    @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("CountryList", new SelectList(ViewBag.CountryList, "Id", "CountryName"), "Please select", new { @class = "form-control bordercss" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("National Id", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("NationalId", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Passport No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("PassportNo", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Land Phone No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("LandPhoneNo", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Sell Phone No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("SellPhoneNo", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Land Phone No (Office)", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("LandPhoneNoOffice", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Email (Office)", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("EmailOffice", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Email (Personal)", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("EmailPersonal", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Emergency Contact Person", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("EmergencyContactPerson", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Emergency Contact No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.Editor("EmergencyContactNo", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.Label("Relation", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("RelationList", new SelectList(ViewBag.RelationList, "Id", "Relation"), "Please select", new { @class = "form-control bordercss" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Present Address", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @*@Html.Editor("PresentAddress", new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.TextArea("PresentAddress", htmlAttributes: new { @class = "form-control", @rows = "4" })
                                    </div>
                                    @Html.Label("Permanent Address", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @*@Html.Editor("PermanentAddress", new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.TextArea("PermanentAddress", htmlAttributes: new { @class = "form-control", @rows = "4" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Present District", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("Districtlist", null, new { @id = "ddlDistrictlist", @class = "form-control bordercss" })
                                    </div>
                                    @Html.Label("Permanent District", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("PerDistrictlist", null, new { @id = "ddlPerDistrictlist", @class = "form-control bordercss" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    @Html.Label("Present Thana", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("Thanalist", null, new { @id = "ddlThanalist", @class = "form-control bordercss" })
                                    </div>
                                    @Html.Label("Permanent Thana", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.DropDownList("PerThanalist", null, new { @id = "ddlPerThanalist", @class = "form-control bordercss" })
                                    </div>
                                </div>

                                <div class="row form-group">
                                    @Html.Label("Rmarks", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @Html.TextArea("Remarks", htmlAttributes: new { @class = "form-control", @rows = "4" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="control-label col-md-5">
                                        <button type="submit" class="btn btn-success" id="btnSaveStep2">Save</button>
                                    </div>
                                </div>
                            </div>
                            <div id="step-3">
                            @using (Html.BeginForm("EmployeeImageSave", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", id = "EmployeeImageForm" }))
                            {
                                @model ERP.Web.Controllers.EmployeeController.EmployeeModel
                                <div class="row form-group">
                                    @Html.Label("Photograph", htmlAttributes: new { @class = "control-label col-md-2" })

                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        @*<img id="thumbnil" style="width:100px; height:100px;" src="~/Images/blank-headshot.jpg" alt="Image" class="img-responsive" />*@
                                        <img id="thumbnil" style="width:100px; height:100px;" src="/Employee/RetrieveImage/@ViewData["HdnEmployeeId"]" alt="Image" class="img-responsive" />
                                        @Html.TextBoxFor(model => model.PhotographMsg, new { type = "file", @onchange = "showMyImage(this);", @class = "form-control" })
                                    </div>
                                    @Html.Label("Signature", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-6 col-xs-12">
                                        <img id="thumbnil2" style="width:100px; height:100px;" src="/Employee/RetrieveSign/@ViewData["HdnEmployeeId"]" alt="Image" class="img-responsive" />
                                        @*<img id="thumbnil2" style="width:100px; height:100px;" src="~/Images/signature.png" alt="Image" class="img-responsive" />*@
                                        @Html.TextBoxFor(model => model.SignatureMsg, new { type = "file", @onchange = "showMyImageSign(this);", @class = "form-control" })
                                    </div>
                                </div>
                                
                                <div class="row form-group">
                                    <div class="control-label col-md-5">
                                        <button type="submit" class="btn btn-success" id="btnImagesSave">Save</button>
                                    </div>
                                </div>
                                <div class="item form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                                    <div class="success" role="alert" style="display:none" id="SucInvDeailMsg">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <p class="message-content">Saved Sucessfully</p>
                                    </div>
                                    <div class="failed" role="alert" style="display:none">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <p class="message-content">Fail to save</p>
                                    </div>
                                    <br />
                                </div>
                            </div>
                            }
                            </div>
                            @*<div id="step-4">
                                <h2 class="StepTitle">Step 4 Content</h2>
                                <p>
                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                                </p>
                                <p>
                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor
                                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                                </p>
                                <p>
                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor
                                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                                </p>
                            </div>*@
                        </div>
                        <!-- End SmartWizard Content -->
                    </div>
                </div>
            </div>
        </div>
    </div>


}